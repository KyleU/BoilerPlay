# Generated File

# Address Routes
GET         /addressRow                                               controllers.admin.address.AddressRowController.list(q: Option[String] ?= None, orderBy: Option[String] ?= None, orderAsc: Boolean ?= true, limit: Option[Int] ?= None, offset: Option[Int] ?= None, t: Option[String] ?= None)
GET         /addressRow/autocomplete                                  controllers.admin.address.AddressRowController.autocomplete(q: Option[String] ?= None, orderBy: Option[String] ?= None, orderAsc: Boolean ?= true, limit: Option[Int] ?= None)
GET         /addressRow/form                                          controllers.admin.address.AddressRowController.createForm
POST        /addressRow                                               controllers.admin.address.AddressRowController.create
GET         /addressRow/byCityId/:cityId                              controllers.admin.address.AddressRowController.byCityId(cityId: Int, orderBy: Option[String] ?= None, orderAsc: Boolean ?= true, limit: Option[Int] ?= None, offset: Option[Int] ?= None, t: Option[String] ?= None, embedded: Boolean ?= false)
GET         /addressRow/:addressId                                    controllers.admin.address.AddressRowController.view(addressId: Int, t: Option[String] ?= None)
GET         /addressRow/:addressId/counts                             controllers.admin.address.AddressRowController.relationCounts(addressId: Int)
GET         /addressRow/:addressId/form                               controllers.admin.address.AddressRowController.editForm(addressId: Int)
POST        /addressRow/:addressId                                    controllers.admin.address.AddressRowController.edit(addressId: Int)
GET         /addressRow/:addressId/remove                             controllers.admin.address.AddressRowController.remove(addressId: Int)

# City Routes
GET         /cityRow                                                  controllers.admin.address.CityRowController.list(q: Option[String] ?= None, orderBy: Option[String] ?= None, orderAsc: Boolean ?= true, limit: Option[Int] ?= None, offset: Option[Int] ?= None, t: Option[String] ?= None)
GET         /cityRow/autocomplete                                     controllers.admin.address.CityRowController.autocomplete(q: Option[String] ?= None, orderBy: Option[String] ?= None, orderAsc: Boolean ?= true, limit: Option[Int] ?= None)
GET         /cityRow/form                                             controllers.admin.address.CityRowController.createForm
POST        /cityRow                                                  controllers.admin.address.CityRowController.create
GET         /cityRow/byCountryId/:countryId                           controllers.admin.address.CityRowController.byCountryId(countryId: Int, orderBy: Option[String] ?= None, orderAsc: Boolean ?= true, limit: Option[Int] ?= None, offset: Option[Int] ?= None, t: Option[String] ?= None, embedded: Boolean ?= false)
GET         /cityRow/:cityId                                          controllers.admin.address.CityRowController.view(cityId: Int, t: Option[String] ?= None)
GET         /cityRow/:cityId/counts                                   controllers.admin.address.CityRowController.relationCounts(cityId: Int)
GET         /cityRow/:cityId/form                                     controllers.admin.address.CityRowController.editForm(cityId: Int)
POST        /cityRow/:cityId                                          controllers.admin.address.CityRowController.edit(cityId: Int)
GET         /cityRow/:cityId/remove                                   controllers.admin.address.CityRowController.remove(cityId: Int)

# Country Routes
GET         /countryRow                                               controllers.admin.address.CountryRowController.list(q: Option[String] ?= None, orderBy: Option[String] ?= None, orderAsc: Boolean ?= true, limit: Option[Int] ?= None, offset: Option[Int] ?= None, t: Option[String] ?= None)
GET         /countryRow/autocomplete                                  controllers.admin.address.CountryRowController.autocomplete(q: Option[String] ?= None, orderBy: Option[String] ?= None, orderAsc: Boolean ?= true, limit: Option[Int] ?= None)
GET         /countryRow/form                                          controllers.admin.address.CountryRowController.createForm
POST        /countryRow                                               controllers.admin.address.CountryRowController.create
GET         /countryRow/:countryId                                    controllers.admin.address.CountryRowController.view(countryId: Int, t: Option[String] ?= None)
GET         /countryRow/:countryId/counts                             controllers.admin.address.CountryRowController.relationCounts(countryId: Int)
GET         /countryRow/:countryId/form                               controllers.admin.address.CountryRowController.editForm(countryId: Int)
POST        /countryRow/:countryId                                    controllers.admin.address.CountryRowController.edit(countryId: Int)
GET         /countryRow/:countryId/remove                             controllers.admin.address.CountryRowController.remove(countryId: Int)
